Subject: Implement “Quote Mode” + Appendices for ASC 606 Memos (with refined UI labels and help text)

Hi [Developer Name],

Below are the finalized implementation instructions to add the selective quoting/citation system with appendices to the ASC 606 memo generator. This version includes the agreed UI labels and help text, and ensures ASC 606 guidance is paraphrased with pinpoint citations (brief phrases only where appropriate).

Overview

Purpose: Keep the memo body readable while preserving audit traceability.
Controls: Three memo styles users can choose:
Minimal inline quotes (default)
Citations only (no inline quotes)
Expanded quotes (longer contract excerpts or summaries)
Treatment:
Contract text: quote when outcome‑determinative, subject to the selected mode and word caps.
ASC 606: always paraphrased with pinpoint citations; only brief decisive phrases may be quoted where appropriate (no long verbatim guidance blocks in any mode).
Appendices: Add:
Appendix A: Contract excerpts (verbatim clauses, concise).
Appendix B: Authoritative guidance (ASC 606) paraphrases with precise citations; brief phrases allowed, no long verbatim blocks.
Deliverables

UI: Add a radio input for memo style (quote_mode) and pass it into the analysis.
Prompts: Update system and step prompts to enforce the quoting policy, citation rules, and “Because …” reasoning.
Appendices: Add a method to create Appendix A and Appendix B and inject them into the final memo.
CleanMemoGenerator: Update template and combine logic to include appendices.
Tests: Simple smoke tests for all three modes.
Part A — UI changes (asc606_page.py)

Add the radio control and map to internal values:
In get_asc606_inputs():

options = [ "Minimal inline quotes (default)", "Citations only (no inline quotes)", "Expanded quotes (longer contract excerpts or summaries)" ] memo_style = st.radio( "2️⃣ Memo style (quotes & citations)", options=options, index=0, help="Controls how much verbatim contract text appears in the memo body. ASC 606 guidance is paraphrased with precise citations; only brief decisive phrases may be quoted where appropriate." ) quote_mode_map = { "Minimal inline quotes (default)": "minimal", "Citations only (no inline quotes)": "citations_only", "Expanded quotes (longer contract excerpts or summaries)": "expanded" } quote_mode = quote_mode_map[memo_style]

Then update return values and callers:

return contract_text, filename, additional_context, quote_mode, is_ready

In render_asc606_page(): contract_text, filename, additional_context, quote_mode, is_ready = get_asc606_inputs()

Pass into perform_asc606_analysis: perform_asc606_analysis(contract_text, additional_context, quote_mode)

Update perform_asc606_analysis signature:
def perform_asc606_analysis(contract_text: str, additional_context: str = "", quote_mode: str = "minimal"):

Part B — Wire quote_mode through analysis

Pass quote_mode to each step:
When calling analyzer._analyze_step in perform_asc606_analysis: step_result = analyzer._analyze_step( step_num=step_num, contract_text=contract_text, authoritative_context=authoritative_context, customer_name=customer_name, additional_context=additional_context, quote_mode=quote_mode )

Update ASC606StepAnalyzer signatures:
_analyze_step_with_retry(..., additional_context: str = "", quote_mode: str = "minimal")
_analyze_step(..., additional_context: str = "", quote_mode: str = "minimal")
_get_step_markdown_prompt(..., quote_mode: str = "minimal")
Ensure _analyze_step_with_retry forwards quote_mode to _analyze_step.

Part C — Prompt updates (policy-driven quoting and citations)

System prompt: replace the hard requirement to quote ASC 606 with policy language.
def _get_markdown_system_prompt(self) → str: return ( "You are an expert technical accountant from a Big 4 firm, specializing in ASC 606 revenue recognition.\n\n" "Generate professional accounting analysis in clean markdown format. Your output will be displayed directly using markdown rendering.\n\n" "Your analysis must be:\n" "- Audit-ready and professional\n" "- Clear and understandable\n" "- Based on the evidence provided in the contract text\n" "- Based on authoritative guidance\n" "- Include explicit reasoning with "Because ..." statements tied to evidence and citations\n" "- Support your analysis with specific contract text and authoritative citations\n" "- Use contract quotes and ASC 606 phrasing only as permitted by QUOTE MODE and citation rules\n" "- Acknowledge any limitations or gaps in information\n" "- Formatted as clean, ready-to-display markdown\n" )

Step prompt: add QUOTE MODE rules, citation format, and tighten required output.
Inside _get_step_markdown_prompt(...):

Compute caps: inline_limit = {"minimal": 25, "citations_only": 0, "expanded": 75}.get(quote_mode, 25) asc_inline_cap = min(inline_limit, 25) # ASC phrases never exceed 25 words

After AUTHORITATIVE GUIDANCE, insert:

QUOTE MODE (obey strictly):

quote_mode: {quote_mode}
Inline quote word limit: {inline_limit} words per quote.
Contract text: Quote verbatim only when outcome-determinative. Keep quotes concise; use ellipses (…) to omit non-essential words; include section/page if known. In expanded mode, allow up to 75 words; use at most two long quotes per step.
ASC 606: Paraphrase with pinpoint citations. You may include brief decisive phrases (≤ {asc_inline_cap} words) where appropriate. Do not include long verbatim guidance blocks in any mode.
Citation and evidence rules:

Use bracketed pinpoint citations:
Contract: [Contract §X.Y, p. N; Appx A-#]
ASC 606: [ASC 606-10-25-19] or [ASC 606-10-25-19–25-22; Appx B-#]
Number evidence items in Appendices and reuse those IDs in the body (A-#, B-#).
For each key conclusion, include a sentence that begins with “Because …” tying evidence and guidance to the conclusion.
Replace the REQUIRED OUTPUT FORMAT block with:

REQUIRED OUTPUT FORMAT (Clean Markdown):

{step['title']}
Analysis: Write well-structured paragraphs that:

Apply the QUOTE MODE and citation rules above.
Include short, decisive contract quotes only if permitted by quote_mode and within limits, with bracketed citations.
Paraphrase ASC 606 with pinpoint citations; include brief phrases only within the ASC cap.
Include explicit “Because …” reasoning that ties evidence to conclusions.
Conclusion: 2–3 sentences summarizing the determination for this step, with at least one bracketed citation.

Issues or Uncertainties: List missing facts, ambiguities, or gray areas and the potential impact; otherwise state “None identified.”

Additional critical formatting and citation rules:

Currency format: $240,000 (comma, no spaces between digits)
Always put spaces after periods and commas
Do not concatenate or split words (“professional services”, not “professionalservices” / “p rofessional”)
Use normal dashes (-), not special characters (−)
Keep text readable and properly spaced
Use professional accounting language
Copyright/citation treatment:
Contract text: quoting allowed within the inline limits.
ASC 606: paraphrase with pinpoint citations; brief phrases only (≤ {asc_inline_cap} words); no long verbatim blocks; no third-party publications.
Part D — Appendices generation Add a method to build Appendix A and Appendix B, then inject them into final_results and the memo.

New method in ASC606StepAnalyzer:
def generate_appendices(self, steps_data: Dict[str, Any], contract_text: str, authoritative_context: str, quote_mode: str = "minimal") → Dict[str, str]: # Creates two markdown sections: # - Appendix A: Contract Excerpts (A-1, A-2, ...) # - Appendix B: Authoritative Guidance (ASC 606) (B-1, B-2, ...) # Rules: # A: Verbatim decisive clauses, concise, each with title + "quote" + [Contract §..., p. ...]. # B: Paraphrased guidance with pinpoint citations; allow brief phrases only (<= 25 words); no long verbatim blocks.

Use the LLM to:

Read step markdowns to identify cited clauses and guidance.
Produce numbered items for A and B as clean markdown.
Respect quote_mode for contract excerpts and ASC phrase caps.
Call from perform_asc606_analysis after summary/background/conclusion are generated and before memo generation:
with st.spinner("Generating Appendices..."): appendices = analyzer.generate_appendices(analysis_results, contract_text, authoritative_context, quote_mode) final_results['appendix_a'] = appendices.get('appendix_a', '') final_results['appendix_b'] = appendices.get('appendix_b', '')

Then generate the memo:

memo_content = memo_generator.combine_clean_steps(final_results)

Part E — CleanMemoGenerator updates

In asc606/templates/memo_template.md, add placeholders near the end:
Overall Conclusion
{{ conclusion }}

{{ appendix_a }}

{{ appendix_b }}

In combine_clean_steps(final_results), ensure it reads:
appendix_a = final_results.get('appendix_a', '')
appendix_b = final_results.get('appendix_b', '') and injects them (or append empty strings if not present).
Part F — Heuristics baked into prompts The prompts bias toward quoting when exact wording drives the conclusion. Typical trigger areas:

Termination/penalties; enforceable right to payment
Variable consideration (rebates, bonuses, price protection, usage tiers)
Nonrefundable upfront fees; renewal discounts (material rights)
Options/renewals; volume commitments; minimum purchases/shortfall penalties
Acceptance criteria; transfer terms; bill-and-hold; consignment; customer-controlled assets
Stand-ready obligations; SLAs; uptime/response times
Licenses: restrictions/scope; updates; functional vs. symbolic IP
Warranties; returns; refund rights
Principal vs agent indicators
Significant financing component; consideration payable to a customer; noncash consideration
Contract combination/modification; costs to obtain/fulfill
Part G — Acceptance criteria

UI:
Radio control with labels:
Minimal inline quotes (default)
Citations only (no inline quotes)
Expanded quotes (longer contract excerpts or summaries)
Help text: “Controls how much verbatim contract text appears in the memo body. ASC 606 guidance is paraphrased with precise citations; only brief decisive phrases may be quoted where appropriate.”
Behavior:
Minimal: Contract quotes ≤25 words; ASC 606 paraphrased; ASC phrases ≤25 words if used.
Citations only: No inline quotes; rely on paraphrase + citations; Appendices still generated.
Expanded: Contract quotes allowed up to 75 words when outcome‑determinative (max two long quotes per step); ASC 606 still paraphrased; ASC phrases ≤25 words.
Memo structure includes Executive Summary, Background, Steps 1–5 (Analysis, Conclusion, Issues), Overall Conclusion, Appendix A, Appendix B.
Citations are bracketed and pinpointed: [ASC 606-10-25-19], [Contract §9.2, p. 12; Appx A-3].
“Because …” sentences tie evidence to conclusions.
Currency and spacing rules followed exactly.
No long verbatim ASC 606 blocks in any mode.
Part H — Test checklist

Run a sample with a contract containing termination for convenience, acceptance criteria, and a rebate.
Verify each mode:
Minimal: short contract quotes inline; ASC paraphrases with citations; appendices populated.
Citations only: no inline quotes anywhere; appendices populated.
Expanded: longer contract quotes appear (≤75 words, ≤2 per step); ASC paraphrases with brief phrases only; appendices populated.
Confirm no long ASC 606 verbatim text appears in any mode.
Confirm the template renders appendices and all formatting rules are respected.
Notes

No new dependencies required.
Knowledge retrieval logic unchanged.
If desired, we can append appendices directly to memo_content without template edits, but adding placeholders in the template is cleaner.
Let me know if you want me to drop in a ready-to-paste _get_step_markdown_prompt with the QUOTE MODE block included.