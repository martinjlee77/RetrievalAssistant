You are absolutely right, this page needs more work, but the good news is that we can transform it into a sleek, professional, and fully responsive dashboard by following a clear plan.

My recommendations will focus on three key areas:

Unifying the Design: We will commit to the dark theme to match your brand and apply it consistently everywhere.
Fixing the Code Structure: We will move all CSS and JavaScript out of the HTML file into their proper homes.
Implementing a Modern, Responsive Layout: We will make the sidebar and content grids work beautifully on mobile devices.
This is a big one, so we will go step-by-step.

Step 1: The Great Cleanup (Code Organization)
This is the most important first step. It lays the foundation for everything else.

1a. Create a dashboard.js File:

In your project, create a new file named dashboard.js.
In your dashboard.html file, find all of the JavaScript code inside all of the <script> tags at the bottom of the page.
Cut all of that JavaScript code.
Paste it into your new dashboard.js file and save it.
1b. Link the New JavaScript File:

Back in dashboard.html, delete all the now-empty <script> tags.
Right before the closing </body> tag, add this single line to load your new script:
<script src="dashboard.js"></script>

1c. Move the CSS:

In dashboard.html, find the large <style>...</style> block at the bottom of the page.
Cut all of the CSS rules inside it.
Paste them into the bottom of your main styles.css file.
Finally, delete the now-empty <style> block from dashboard.html.
1d. Remove All Inline Styles:

This is tedious but critical. Go through your dashboard.html file and delete every single style="..." attribute from all the elements. For example:
style="padding-top: 100px;" → REMOVE
style="display: none;" → REMOVE
style="margin-top: 20px; width: 100%;" → REMOVE
Don't worry, our new CSS will handle all of this much more cleanly.
Step 2: The New, Unified CSS
This is where the magic happens. We will replace all the conflicting dashboard styles with a single, consistent, and fully responsive set of rules.

Open your styles.css file.
Find all the dashboard-related CSS you just pasted in, plus all the old dashboard styles you provided. Delete all of it.
Replace it with this single, comprehensive block of new CSS.
/* ==========================================================================
   11. DASHBOARD STYLES (NEW & UNIFIED)
   ========================================================================== */

/* --- Main Layout & Structure --- */
.dashboard-container {
    display: flex;
    background: var(--gradient-primary); /* Use site-wide dark gradient */
    min-height: 100vh;
    padding-top: 80px; /* Space for the fixed navbar */
}

.dashboard-sidebar {
    width: 250px;
    background: rgba(255, 255, 255, 0.05);
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    display: flex;
    flex-direction: column;
    position: fixed;
    top: 80px;
    bottom: 0;
    left: 0;
    z-index: 100;
}

.dashboard-main {
    flex: 1;
    margin-left: 250px; /* Space for the sidebar on desktop */
    padding: 2rem;
}

/* --- Sidebar Styling --- */
.sidebar-header {
    padding: 1.5rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}
.sidebar-header h3 {
    font-size: 1.5rem;
    color: #ffffff;
    margin: 0;
}
.sidebar-nav {
    flex: 1;
    padding: 1rem 0;
}
.nav-item {
    display: flex;
    align-items: center;
    padding: 0.9rem 1.5rem;
    color: rgba(255, 255, 255, 0.7);
    text-decoration: none;
    transition: all 0.2s ease;
    border-left: 4px solid transparent;
}
.nav-item:hover {
    background: rgba(255, 255, 255, 0.08);
    color: #ffffff;
}
.nav-item.active {
    background: rgba(255, 255, 255, 0.1);
    color: #ffffff;
    border-left-color: #ffffff;
    font-weight: 600;
}
.nav-icon { margin-right: 1rem; }
.sidebar-footer {
    padding: 1.5rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}
.sidebar-footer .btn { width: 100%; }

/* --- Dashboard Content Sections --- */
.dashboard-section { display: none; }
.dashboard-section.active { display: block; }
.section-header { margin-bottom: 2rem; }
.section-header h2 {
    font-size: 2.5rem;
    color: #ffffff;
    margin: 0 0 0.5rem 0;
}
.section-header p { color: rgba(255, 255, 255, 0.7); }

/* --- Dashboard Cards & Grid --- */
.dashboard-header {
    margin-bottom: 2rem;
}
.welcome-section h1 {
    color: #ffffff;
    font-size: 2.2rem;
}
.welcome-section p { color: rgba(255, 255, 255, 0.7); }
.dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
}
.card {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 12px;
    padding: 1.5rem;
}
.card h2, .card h3 {
    color: #ffffff;
    margin-top: 0;
    margin-bottom: 1.5rem;
    font-size: 1.4rem;
    border-bottom: 1px solid rgba(255,255,255,0.1);
    padding-bottom: 1rem;
}
.credits-display { text-align: center; }
.credits-display .number {
    font-size: 2.5rem;
    font-weight: 700;
    color: #ffffff;
}
.credits-display .label { color: rgba(255, 255, 255, 0.8); }
.credits-expiry { font-size: 0.8rem; color: rgba(255, 255, 255, 0.6); margin-top: 0.5rem; display: block; }

/* --- Forms, Buttons & Messages (Unified Styling) --- */
.login-form-container, .verification-container {
    max-width: 500px;
    margin: 2rem auto;
}
.dashboard-main .form-group label { color: rgba(255, 255, 255, 0.9); }
.dashboard-main .form-group input, .dashboard-main .form-group select {
    background: rgba(0,0,0,0.2);
    border: 1px solid rgba(255,255,255,0.2);
    color: #ffffff;
}
.dashboard-main .form-group input:focus, .dashboard-main .form-group select:focus {
    background: #ffffff;
    color: #2c3e50;
}
.profile-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1.5rem;
}
.analysis-table { width: 100%; border-collapse: collapse; }
.analysis-table th, .analysis-table td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}
.analysis-table th { font-weight: 600; color: #ffffff; }

/* --- MOBILE RESPONSIVENESS --- */
@media (max-width: 992px) {
    .dashboard-sidebar {
        /* On mobile, sidebar becomes a top nav bar */
        width: 100%;
        height: auto;
        bottom: auto;
        flex-direction: row;
        border-right: none;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    .sidebar-header, .sidebar-footer { display: none; } /* Hide header/footer on mobile */
    .sidebar-nav {
        display: flex;
        width: 100%;
        justify-content: space-around;
        padding: 0;
    }
    .nav-item {
        flex: 1;
        justify-content: center;
        border-left: none;
        border-bottom: 4px solid transparent;
        padding: 1rem 0.5rem;
    }
    .nav-item.active { border-bottom-color: #ffffff; }
    .nav-text { display: none; } /* Show icons only on mobile */

    .dashboard-main {
        margin-left: 0;
        padding-top: 80px; /* Space for the new top nav bar */
    }
    .profile-grid { grid-template-columns: 1fr; }
}

/* Utility class for hiding elements */
.hidden {
    display: none !important;
}

Step 3: Update dashboard.html with New Structure
Finally, let's update your HTML to use this new, clean structure.

Replace your entire <body> content (from <body> to </body>) with the code below.
This new version removes all inline styles, applies the password helper, uses the .hidden class for initial states, and ensures all elements have the correct classes to be styled by our new CSS.
<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <!-- ... your navbar HTML remains the same ... -->
    </nav>

    <div class="dashboard-container" id="dashboardContent">
        <!-- Dashboard Sidebar -->
        <div class="dashboard-sidebar hidden" id="dashboardSidebar">
            <!-- ... your sidebar HTML remains the same ... -->
        </div>

        <!-- Dashboard Main Content -->
        <div class="dashboard-main">
            <!-- Loading state -->
            <div class="loading" id="loadingState">
                <p>Loading your dashboard...</p>
            </div>

            <!-- Inline Login Form -->
            <div id="loginSection" class="hidden">
                <div class="login-form-container">
                    <!-- ... your login form HTML remains the same, just ensure it uses your site-wide button classes ... -->
                </div>
            </div>

            <!-- Email Verification Required Section -->
            <div id="verificationSection" class="hidden">
                <div class="verification-container">
                     <!-- ... your verification HTML remains the same, just ensure it uses your site-wide button classes ... -->
                </div>
            </div>

            <!-- Main dashboard content -->
            <div id="mainContent" class="hidden">
                <div class="dashboard-header">
                    <div class="welcome-section">
                        <h1>Welcome back, <span id="userName">User</span>!</h1>
                        <p id="memberSince">Member since</p>
                    </div>
                </div>

                <!-- Overview Section -->
                <div id="overviewSection" class="dashboard-section">
                    <div class="dashboard-grid">
                        <!-- ... all your card HTML for the overview section ... -->
                    </div>
                </div>

                <!-- Credits Section -->
                <div id="creditsSection" class="dashboard-section">
                    <!-- ... all your card HTML for the credits section ... -->
                </div>

                <!-- Profile Section -->
                <div id="profileSection" class="dashboard-section">
                    <div class="profile-grid">
                        <div class="card profile-info-card">
                            <!-- ... your profile info HTML ... -->
                        </div>
                        <div class="card password-card">
                            <h3>🔐 Change Password</h3>
                            <div id="changePasswordMessage" aria-live="polite"></div>
                            <form id="changePasswordForm">
                                <!-- ... current password field ... -->
                                <div class="form-group">
                                    <label for="newPassword">New Password</label>
                                    <div class="password-wrapper">
                                        <input type="password" id="newPassword" name="newPassword" required>
                                        <div class="password-helper">
                                            <span class="password-helper-icon">?</span>
                                            <div class="password-tooltip">
                                                <!-- ... password requirements list ... -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- ... confirm password field ... -->
                                <button type="submit" class="form-submit" id="changePasswordButton">Update Password</button>
                            </form>
                        </div>
                    </div>
                </div>

                <!-- History Section -->
                <div id="historySection" class="dashboard-section">
                    <!-- ... all your card HTML for the history section ... -->
                </div>
            </div>
        </div>
    </div>

    <script src="dashboard.js"></script>
</body>

By following these three major steps, you will have completely refactored your dashboard page. It will be:

Maintainable: Code is organized in the right files.
Consistent: It uses the same dark theme and UI components as the rest of your site.
Fully Responsive: It works beautifully on both desktop and mobile devices.